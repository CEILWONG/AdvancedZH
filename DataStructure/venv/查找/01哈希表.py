'''

这一章是关于查找内容的；

一个序列里，去查找我们需要的数；

如果我们顺序一个个的去比对，可能是需要所有的斗查找一遍的；

后来我们在顺序表里发现了可以使用二分法来提高查找的效率；

就是说对序列有更多的先验知识，可以提高查找的时间复杂度为常数级；

---
这就取决于我们之前是按照一定规则来存放这写数据，我们可以称之为哈希表--散列表；

哈希表：固定长度的列表里存放一定数量的数据，每个槽位存放一个数据，有一个哈希函数决定着哪个槽位放哪个数据；

哈希表里最重要的就是关于：冲突的存在及如何解决冲突；

'''


'''

完美散列函数：

一个哈希函数，每一个数据都可以映射到不同的槽位中----完美散列函数；

冲突最少，计算难度较低，充分分散数据项------近似完美散列函数；

应用---  一致性校验 （md5，SHA都是比较好的哈希函数，实际应用中没有威胁）


（不可以根据计算出的哈希值反推出之前的原始数据值）
'''